<?php

namespace Tests\Feature;

use App\Http\Controllers\Auth\LoginController;
use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class LoginTest extends TestCase
{
  use RefreshDatabase;
  use WithFaker;

    private $user;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->user = factory(User::class, 1)->create()->first();
    }

    public function tearDown(): void
    {
        parent::tearDown(); // TODO: Change the autogenerated stub

        $this->user->delete();
    }

    public function testUserCanLogin()
    {

        $login_data = ["email" => $this->user->email, "password" => "password"];

        $response = $this->postJson('api/auth/login', $login_data);

        $response->assertOk();
        $response->assertJsonStructure(['access_token']);
        $response->assertJson(['message' => LoginController::SUCCESS_RESPONSE_MESSAGE]);
    }



    public function testUserLoginReturnsInvalidCredentialsResponse()
    {
        $login_data = ["email" => $this->user->email, "password" => "invalid password"];

        $response = $this->postJson('api/auth/login', $login_data);

        $response->assertUnauthorized();
        $response->assertJson(['error' => LoginController::FAILURE_RESPONSE_MESSAGE]);
    }

}
